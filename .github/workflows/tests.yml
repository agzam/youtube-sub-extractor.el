name: "Testing youtube-sub-extractor.el"
on: [push, pull_request]
jobs:
  Testing:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        emacs_version:
          - 27.1
          - 28.2
          - snapshot
    steps:
      - uses: actions/checkout@v3

      - name: install Emacs
        uses: purcell/setup-emacs@master
        with:
            version: ${{ matrix.emacs_version }}

      - name: install buttercup
        run: |-
          set -e
          script=$(cat <<- 'EOF'
            (progn
              (require 'package)
              (add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
              (package-initialize)
              (unless (package-installed-p 'buttercup)
                (package-refresh-contents)
                (package-install 'buttercup)))
          EOF
          )
          emacs --batch --eval "$script"

      - name: check
        run: |-
         emacs --batch --funcall package-initialize --directory . --funcall buttercup-run-discover
  MELPA-Checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install Emacs
        run: |
          sudo apt-get -y install emacs || (sudo apt-get update && sudo apt-get -y install emacs)
          emacs --version

      - name: Ensure pip exists
        run: |
          command -v pip || sudo apt-get -y install python3-pip

      - name: Install Melpazoid
        run: |
          ( cd ~/melpazoid && git checkout -- . && git pull --rebase ) || git clone https://github.com/riscy/melpazoid.git ~/melpazoid
          pip install ~/melpazoid 2>/dev/null

      - name: Check MELPA recipe with melpazoid
        env:
          RECIPE: (youtube-sub-extractor :repo "agzam/youtube-sub-extractor.el" :fetcher github)
          EXIST_OK: false
        run: echo $GITHUB_REF && env LOCAL_REPO="$GITHUB_WORKSPACE" make -C ~/melpazoid
      - name: Install Eldev
        run: curl -fsSL "https://raw.github.com/doublep/eldev/master/webinstall/github-eldev" | sh
      - name: Eldev lint
        run: |
          eldev -p -dtT --color=always lint
